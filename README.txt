Objetivos de la aplicaci√≥n

Este proyecto tiene como objetivo gestionar informaci√≥n de pa√≠ses, permitiendo:

Consultar la lista de pa√≠ses disponibles en el sistema.

Buscar un pa√≠s por su ID.

Insertar pa√≠ses desde una API externa.

Renderizar vistas en EJS para la navegaci√≥n.

Exponer datos tambi√©n en formato JSON para integraciones con otras aplicaciones.

üõ†Ô∏è Tecnolog√≠as utilizadas

Node.js ‚Üí entorno de ejecuci√≥n.

Express.js ‚Üí framework web para manejar rutas, middlewares y controladores.

EJS ‚Üí motor de plantillas para renderizar vistas din√°micas en el frontend.

Express EJS Layouts ‚Üí gesti√≥n de plantillas maestras y layouts.

Axios ‚Üí cliente HTTP para consumir APIs externas.

Mongoose ‚Üí ORM para interactuar con bases de datos MongoDB.

Express Validator ‚Üí validaci√≥n de datos en formularios y peticiones.

Method-Override ‚Üí permite usar m√©todos HTTP como PUT y DELETE desde formularios HTML.

‚öôÔ∏è Requisitos previos

Antes de instalar, aseg√∫rate de tener instalado en tu m√°quina:

Node.js
 (versi√≥n 18 o superior recomendada).

MongoDB
 instalado localmente o acceso a una base de datos en la nube (por ejemplo, MongoDB Atlas).

-Git para clonar el repositorio.
git clone https://github.com/usuario/mi-aplicacion-paises.git
cd mi-aplicacion-paises
-Instalar dependencias
npm install
Configurar variables de entorno
EN CARPETA CONFIG EL ARCHIVO 
en el archivo .env
configuramos el puerto y stringconection de la base de datos de mongodb
# Puerto del servidor
PORT=4000
# Configuraci√≥n de la base de datos
MONGO_URI=mongodb+srv://grupo-01:grupo01@cursadanodejs.ls9ii.mongodb.net/Node-js

ejecutamos el proyecto en la terminal con el comando 
node app.mjs